- Dạng search k dấu, chương trình đào tạo -> chuong trinh dao tao
- Dạng search từ khóa ít, chương trình đào tạo -> chương trình
- Dạng search sai chính tả, chương trình đào tạo -> chương trnh


   // Cac ham chuc nang search cua Xanh
        public List<Phim> searchFilm(string nameFilm)
        {
            List<Phim> lst =  db.Phim.ToList();

            List<Phim> result = new List<Phim>();
            foreach (Phim item in lst)
            {
                int temp = LevenshteinDistance(nameFilm, item.TenPhim);  
                if (temp <= 5)
                {
                    result.Add(item);
                }
            }       
            return result;
        }

        static int LevenshteinDistance(string s, string t)
        {
            int[,] d = new int[s.Length + 1, t.Length + 1];
            for (int i = 0; i <= s.Length; i++)
                d[i, 0] = i;
            for (int j = 0; j <= t.Length; j++)
                d[0, j] = j;
            for (int j = 1; j <= t.Length; j++)
                for (int i = 1; i <= s.Length; i++)
                    if (s[i - 1] == t[j - 1])
                        d[i, j] = d[i - 1, j - 1];  //no operation
                    else
                        d[i, j] = Math.Min(Math.Min(
                            d[i - 1, j] + 1,    //a deletion
                            d[i, j - 1] + 1),   //an insertion
                            d[i - 1, j - 1] + 1 //a substitution
                            );
            return d[s.Length, t.Length];
        }

        public bool testPun(string a)
        {
            for (int i = 0; i < a.Length; i++)
            {
                if (a[i] == ',')
                    return true;
            }
            return false;
        }

        public List<Phim> searchFilm4(string actor, string directer, string country, string type)
        {
            List<Phim> lst = db.Phim.ToList();

            List<Phim> result = new List<Phim>();
            int t1, t2, t3, t4;
            foreach (Phim item in lst)
            {
// Nếu k có dấu phẩy thì nó sẽ báo lỗi nhé, vậy tính sao đây 

                if(testPun(item.DienVien) == true)
                {
                    string[] dienVien = item.DienVien.Split(',');
                    foreach (string word in dienVien)
                    {
                        t1 = LevenshteinDistance(actor, word);
                        if (t1 <= 5)
                        {
                            result.Add(item);
                        }
                    }
                }
                else
                {
                    t1 = LevenshteinDistance(actor, item.DienVien);
                    if (t1 <= 5)
                    {
                        result.Add(item);
                    }
                }
                
                if(testPun(item.DaoDien) == true)
                {
                    string[] daoDien = item.DaoDien.Split(',');
                    foreach (string dd in daoDien)
                    {
                        t2 = LevenshteinDistance(directer, dd);
                        if (t2 <= 5)
                        {
                            result.Add(item);
                        }
                    }
                }
                else
                {
                    t2 = LevenshteinDistance(directer, item.DaoDien);
                    if (t2 <= 5)
                    {
                        result.Add(item);
                    }
                }
                

                string nuocSanXuat = getCountryOfFilm(item.DanhMucNuocSanXuat.MaSo);
                t3 = LevenshteinDistance(country, nuocSanXuat);

                string theLoai = getTypeOfFilm(item.DanhMucTheLoai.MaSo);
                t4 = LevenshteinDistance(type, theLoai);

                if (t3 <= 5)
                {
                    result.Add(item);
                }
                if (t4 <= 5)
                {
                    result.Add(item);
                }
            }
            return result;
        }